{
  "name": "koa-csrf",
  "description": "CSRF tokens for koa",
  "version": "2.1.2",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/csrf"
  },
  "dependencies": {
    "csrf-tokens": "2"
  },
  "devDependencies": {
    "koa": "0",
    "koa-session": "1",
    "co-body": "*",
    "mocha": "*",
    "should": "*",
    "supertest": "*"
  },
  "scripts": {
    "test": "NODE_ENV=test mocha --require should --reporter spec --harmony-generators --bail"
  },
  "engines": {
    "node": ">= 0.11.3"
  },
  "files": [
    "index.js"
  ],
  "readme": "# Koa CSRF [![Build Status](https://travis-ci.org/koajs/csrf.svg)](https://travis-ci.org/koajs/csrf)\n\nCSRF tokens for koa.\n\n## Install\n\n```\nnpm install koa-csrf\n```\n\n## API\n\nTo install, do:\n\n```js\nrequire('koa-csrf')(app, options)\n```\n\n### Options\n\nAll options are passed to [csrf-tokens](https://github.com/expressjs/csrf-tokens).\n\n### this.csrf\n\nLazily creates a CSRF token.\nCSRF tokens change on every request.\n\n```js\napp.use(function* () {\n  this.render({\n    csrf: this.csrf\n  })\n})\n```\n\n### this.assertCSRF([body])\n\nCheck the CSRF token of a request with an optional body.\nWill throw if the CSRF token does not exist or is not valid.\n\n```js\napp.use(function* () {\n  var body = yield parse(this) // co-body or something\n  try {\n    this.assertCSRF(body)\n  } catch (err) {\n    this.status = 403\n    this.body = {\n      message: 'This CSRF token is invalid!'\n    }\n    return\n  }\n})\n```\n\n### Middleware\n\nkoa-csrf also provide a koa middleware, it is similar to `connect-csrf`.\nin most situation, you only need:\n\n```js\nvar koa = require('koa')\nvar csrf = require('koa-csrf')\nvar session = require('koa-session')\n\nvar app = koa()\napp.keys = ['session secret']\napp.use(session())\ncsrf(app)\napp.use(csrf.middleware)\n\napp.use(function* () {\n  if (this.method === 'GET') {\n    this.body = this.csrf\n  } else if (this.method === 'POST') {\n    this.status = 204\n  }\n})\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/koajs/csrf/issues"
  },
  "homepage": "https://github.com/koajs/csrf",
  "_id": "koa-csrf@2.1.2",
  "_from": "koa-csrf@~2.1.2"
}
