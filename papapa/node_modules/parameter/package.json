{
  "name": "parameter",
  "version": "0.0.7",
  "description": "A parameter verify tools.",
  "main": "index.js",
  "scripts": {
    "test": "make test-all"
  },
  "dependencies": {},
  "devDependencies": {
    "benchmark": "*",
    "should": "*",
    "blanket": "*",
    "travis-cov": "*",
    "coveralls": "*",
    "mocha-lcov-reporter": "*",
    "mocha": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/fengmk2/parameter.git"
  },
  "keywords": [
    "parameter"
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "author": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com"
  },
  "license": "MIT",
  "readme": "parameter [![Build Status](https://secure.travis-ci.org/fengmk2/parameter.png)](http://travis-ci.org/fengmk2/parameter) [![Coverage Status](https://coveralls.io/repos/fengmk2/parameter/badge.png)](https://coveralls.io/r/fengmk2/parameter)\n=======\n\n![logo](https://raw.github.com/fengmk2/parameter/master/logo.png)\n\nA parameter verify tools.\n\n## Install\n\n```bash\n$ npm install parameter\n```\n\n## Docs\n\n```js\n/**\n * Verify data with rules.\n *\n * @param {Object} data input data parameters\n * @param {Object} rules verify rules\n *   {\n *     key1: parameter.Id, // must be string and number value, e.g.: '123', '043624'\n *     // key1: { isId: true },\n *     key2: parameter.Date, // must match 'YYYY-MM-DD' format date string, e.g.: '2013-06-25'\n *     // key2: { isDate: true },\n *     key3: parameter.DateTime, // must match 'YYYY-MM-DD hh:mm:ss' format date string, e.g.: '2013-06-25 12:20:50'\n *     // key3: { isDateTime: true },\n *     key4: 'number', // must match `typeof` result, could be 'number', 'string', 'function' or 'object' \n *     // key4: { type: 'number' },\n *     key5: { required: false, type: 'number' }, // optional value, if set, must be a number\n *     key6: { required: false, type: parameter.Date }, // optional value, if set, must be a date string\n *     key7: { isArray: true, resourceName: 'User', rules: { name: 'string', age: 'number'  } }\n *     // key7: parameter.Array,\n *     // key7: { type: parameter.Array, resource: 'User', rules: { name: 'string', age: 'number'  } }\n *     key8: { isObject: true, resourceName: 'User', rules: { name: 'string', age: 'number'  } }\n *     // key8: parameter.Object,\n *     // key8: { type: parameter.Object, resource: 'User', rules: { name: 'string', age: 'number' } }\n *     key9: /^\\d+$/, // must match number or number string.\n *     key10: ['y', 'm', 'd', 'w'], // must match enums\n *   }\n *   rules's keys must exists on `data`. If `data.key1` not exists, will got `missing_field` error.\n * @param {String} [resourceName] error resource name, default is 'Param'\n * \n * @return {null|Array} errors, return null meaning no errors.\n *   e.g.: [{\n *     resource: 'Param',\n *     field: 'id',\n *     message: 'id required',\n *     code: 'missing_field'\n *   }, ... ]\n */\n```\n\n## Usage\n\n```js\nvar p = require('parameter');\n\nvar data = {\n  id: '043624',\n  nick: '苏千',\n  date: '2013-06-25',\n  age: 29,\n  sid: 123, // or '123'\n  uid: '456',\n  unit: 'y',\n};\n\nvar wrongData = {\n  nick: 123,\n  date: '2013-06-1',\n  age: '29',\n  sex: 0,\n  sid: '123foo',\n  uid: 'bar',\n  unit: 'yy',\n};\n\nvar rules = {\n  id: p.Id,\n  nick: 'string',\n  date: p.Date,\n  age: 'number',\n  sex: { required: false, type: 'string' },\n  sid: /^\\d+$/,\n  uid: { type: /^\\d+$/, message: 'should be digital' }, // custom error message\n  unit: ['y', 'm', 'd', 'w'],\n};\nvar errors = p.verify(data, rules);\n// errors => null\n\nvar errors = p.verify(wrongData, rules);\n// errors =>\n// [ { resource: 'Param',\n//     field: 'id',\n//     message: 'id required',\n//     code: 'missing_field' },\n//   { resource: 'Param',\n//     field: 'nick',\n//     message: 'expect string, but got number',\n//     code: 'invalid' },\n//   { resource: 'Param',\n//     field: 'date',\n//     message: 'should be \"YYYY-MM-DD\" date format string',\n//     code: 'invalid' },\n//   { resource: 'Param',\n//     field: 'age',\n//     message: 'expect number, but got string',\n//     code: 'invalid' },\n//   { resource: 'Param',\n//     field: 'sex',\n//     message: 'expect string, but got number',\n//     code: 'invalid' },\n//   { resource: 'Param',\n//     field: 'sid',\n//     message: 'should match /^\\d+$/',\n//     code: 'invalid' },\n//   { resource: 'Param',\n//     field: 'unit',\n//     message: 'should match one of [\"y\", \"m\", \"d\", \"w\"]',\n//     code: 'invalid' },\n//   { resource: 'Param',\n//     field: 'uid',\n//     message: 'should be digital',\n//     code: 'invalid' } ]\n```\n\n## Performance\n\n```bash\n$ node benchmark.js\n\nrules pass: {id: p.Id} x 5,369,593 ops/sec ±3.41% (91 runs sampled)\nrules pass: {id: {type: p.Id}} x 3,280,905 ops/sec ±4.18% (92 runs sampled)\nrules pass: {id: {idId: true}} x 3,668,805 ops/sec ±1.60% (95 runs sampled)\nrules pass: {date: p.Date} x 3,039,691 ops/sec ±1.56% (94 runs sampled)\nrules pass: {date: {type: p.Date}} x 3,155,415 ops/sec ±1.39% (96 runs sampled)\nrules pass: {date: {isDate: true}} x 3,165,767 ops/sec ±1.21% (96 runs sampled)\nrules pass: {time: p.DateTime} x 3,035,140 ops/sec ±1.07% (92 runs sampled)\nrules pass: {time: {type: p.DateTime}} x 3,201,006 ops/sec ±1.51% (93 runs sampled)\nrules pass: {time: {isDateTime: true}} x 3,249,725 ops/sec ±0.69% (96 runs sampled)\nrules pass: {age: \"number\"} x 5,065,678 ops/sec ±1.03% (92 runs sampled)\nrules pass: {age: {type: \"number\"}} x 4,984,908 ops/sec ±3.26% (90 runs sampled)\nrules pass: {nick: \"string\"} x 4,194,690 ops/sec ±0.73% (97 runs sampled)\nrules pass: {nick: {type: \"string\"}} x 4,124,614 ops/sec ±0.99% (91 runs sampled)\nrules pass: {not_exists: \"string\", required: false} x 986,325 ops/sec ±4.45% (89 runs sampled)\nrules pass: {age: /^\\d+$/} x 3,076,511 ops/sec ±1.20% (93 runs sampled)\nrules pass: {age: {type: /^\\d+$/}} x 3,112,817 ops/sec ±4.81% (88 runs sampled)\nrules pass: {age: {type: /^\\d+$/, message: \"should be digital\"}} x 3,289,649 ops/sec ±3.47% (93 runs sampled)\nrules fail: {age: {type: /^\\d+$/}} x 2,229,454 ops/sec ±2.49% (88 runs sampled)\nrules fail: {age: {type: /^\\d+$/, message: \"should be digital\"}} x 2,384,240 ops/sec ±3.62% (95 runs sampled)\nrules pass: {unit: [\"y\", \"m\", \"w\", \"d\"]} x 3,782,871 ops/sec ±4.65% (88 runs sampled)\nrules pass: {unit: {type: [\"y\", \"m\", \"w\", \"d\"]}} x 4,322,054 ops/sec ±1.01% (95 runs sampled)\nrules fail: {unit: [\"y\", \"m\", \"w\", \"d\"]} x 2,504,761 ops/sec ±1.56% (90 runs sampled)\n\nFastest is rules pass: {age: {type: \"number\"}}\n```\n\n## Authors\n\n```bash\n$ git summary \n\n project  : parameter\n repo age : 6 weeks\n active   : 5 days\n commits  : 16\n files    : 13\n authors  : \n    16  fengmk2                 100.0%\n```\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2013 fengmk2 &lt;fengmk2@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/fengmk2/parameter/issues"
  },
  "homepage": "https://github.com/fengmk2/parameter",
  "_id": "parameter@0.0.7",
  "_from": "parameter@0.0.7"
}
